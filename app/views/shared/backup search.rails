<div class="my-container">
  <div class="box query-input">
    <%= simple_form_for :search, method: :get, url: search_path, html: {class:"input-field" } do |f| %>
      <div class="my-row">
        <div class="top-search d-flex justify-content-between align-self-stretch">
          <%= f.input :query, label: false, placeholder: "What does your heart crave?", input_html: { autocomplete: 'off', class: "query-input" }  %>
          <div class="submit btn-info binoculars">
            <%#= f.submit as: :hidden  %>
            <%= image_tag "Binoculars.svg", height:50, width:50 %>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>

          <%= simple_form_for :search, method: :get, url: search_path, html: {class:"" } do |f| %>
            <%= f.input :query, label: false, as: :hidden %>
            <%= f.submit 'cologne', id: "cologne", class: "city-btn our-btn"%>

          <% end %>



  <div id="hidden-search">
    <div class="explore box">
      <p class= 'search-header justify-content-start'>EXPLORE WHAT'S NEXT</p>
      <div class="my-row">
        <div class="explore d-flex justify-content-between">
          <%= button_to 'All', achievements_path, method: :get, class: "our-btn explore-btn" %>
          <%= button_to 'Achievements', achievements_path, method: :get, params: {query: ''}, class: "our-btn explore-btn" %>
          <%= button_to 'Users', achievements_path, method: :get, class: "our-btn explore-btn" %>
          <%= button_to 'Surprise Me!', achievements_path, method: :get, params: {query: ''}, class: "our-btn explore-btn" %>
        </div>
      </div>
    </div>

    <div class="cities box">
      <p class= 'search-header'>EVERYTHING CLOSE TO...</p>
      <div class="my-row">
        <div class="cities small-btn d-flex d-flex justify-content-between">
          <%= button_to 'Munich', search_path, method: :get, params: {query: 'munich'}, class: "our-btn city-btn" %>
          <%= button_to 'Berlin', search_path, method: :get, params: {query: 'berlin'}, class: "our-btn city-btn" %>
          <%= button_to 'Cologne', search_path, method: :get, params: {query: 'cologne'}, class: "our-btn city-btn" %>
          <%= button_to 'Stuttgart', search_path, method: :get, params: {query: 'Stuttgart'}, class: "our-btn city-btn" %>
        </div>
      </div>
    </div>

    <div class="searches box">
      <p class= 'search-header'>RECENT SEARCHES</p>
      <div class="my-row">
        <div class="small-btn d-flex justify-content-between">
          <%= button_to 'Paragliding', search_path, method: :get, params: {query: 'paragliding'}, class: "our-btn city-btn" %>
          <%= button_to 'Diving', search_path, method: :get, params: {query: 'diving'}, class: "our-btn city-btn" %>
          <%= button_to 'Horseriding', search_path, method: :get, params: {query: 'horseriding'}, class: "our-btn city-btn" %>
          <%= button_to 'Skiing', search_path, method: :get, params: {query: 'skiing'}, class: "our-btn city-btn" %>
        </div>
      </div>
    </div>

  </div>


# @achievements = Goal.where(completed: true)

      # @goals_and_activities_pg = PgSearch.multisearch(user_query)

      # if @goals_and_activities_pg.empty?
      #   @text = "Sorry, no matches. Look at what others did"
        # @achievements = Goal.where(completed: true)
        # @goals_activities = @achievements.map { |goal| goal.activity }
        # geocode_activities

        # @achievements = activities.each do |a|
        #   @achievements =Goal.joins(:activity).where(activity_id: a.id)
        # end
      # else
      #   @text = ''
        # @goals_and_activities = @goals_and_activities_pg.map(&:searchable)
        # # @achievements = @goals_and_activities
        # @achievements = @goals_and_activities.select { |goa| goa.class.name == 'Goal' }.select { |g| g.completed }
        # @goals_activities = @achievements.map { |goal| goal.activity }
        # geocode_activities
        # @achievements = Goal.where(completed: true)

        # @activities = @achievements.map(&:activity)
        # @activities = @goals_and_activities.select { |goa| goa.class.name == 'Activity'}
        # @achievements = @activities.map do |a|
        #    Goal.joins(:activity).where(activity_id: a.id)
        # end
      # end



   def searched
    if params[:search].present?
      user_query = params[:search][:query]
      sql_query = "
        goals.title @@ :query
        OR goals.category @@ :query
        OR goals.motivati @@ :query
        OR activities.location @@ :query
        OR activities.name @@ :query
      "
      @achieve = Goal.joins(:activities).where(sql_query, query: "%#{user_query}%")
      @achieve = Goal.where(completed: true).search_query(user_query)

      if @achieve.empty?
        @text = "Sorry, no matches. Look at what others did"
        @achievements = Goal.where(completed: true)
        geocode
      else
        @text = ''
        @achievements = Goal.joins(:activities).where(sql_query, query: "%#{user_query}%")
        @achievements = Goal.where(completed: true).search_query(user_query)
        geocode

      end
    end

    # Flat.near('Tour Eiffel', 10)      # venues within 10 km of Tour Eiffel
    # Flat.near([40.71, 100.23], 20)
  end
